{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message"],"sources":["/home/vlad/Desktop/DJANGO_REACT_Ecommerce_FullStack/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT, \n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers : {\n                'Content-type':'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            {'username': email, 'password': password},\n            config\n            )\n\n            dispatch ({\n                type:USER_LOGIN_SUCCESS,\n                payload:data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail \n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,WAJJ,QAKO,4BALP;AAOA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC1D,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAER;IADD,CAAD,CAAR;IAIA,MAAMS,MAAM,GAAG;MACXC,OAAO,EAAG;QACN,gBAAe;MADT;IADC,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMZ,KAAK,CAACa,IAAN,CACnB,mBADmB,EAEnB;MAAC,YAAYP,KAAb;MAAoB,YAAYC;IAAhC,CAFmB,EAGnBG,MAHmB,CAAvB;IAMIF,QAAQ,CAAE;MACNC,IAAI,EAACP,kBADC;MAENY,OAAO,EAACF;IAFF,CAAF,CAAR;IAKAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EAEP,CAxBD,CAwBE,OAAOO,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLC,IAAI,EAAEN,eADD;MAELW,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AACJ,CAjCM"},"metadata":{},"sourceType":"module"}